; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:esp8266]
build_type = release
build_flags = 
	-D PIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48_SECHEAP_SHARED
	-O3
	-Wall
	
	-D ARDUINOJSON_ENABLE_ARDUINO_STRING=0
	-D ARDUINOJSON_ENABLE_ARDUINO_STREAM=0
	-D ARDUINOJSON_ENABLE_ARDUINO_PRINT=0
	-D ARDUINOJSON_ENABLE_PROGMEM=0
	
	-D ATOMIC_FS_UPDATE
	
	-D IOP_ESP8266
	
	-D IOP_SSL

	-D IOP_LOG_LEVEL=iop::LogLevel::INFO
	
	-D DEBUG_ESP_PORT=Serial
	-D DEBUG_ESP_SSL
	-D DEBUG_ESP_TLS_MEM
	-D DEBUG_ESP_HTTP_CLIENT
	-D DEBUG_ESP_HTTP_SERVER
	-D DEBUG_ESP_CORE
	-D DEBUG_ESP_WIFI
	-D DEBUG_ESP_HTTP_UPDATE
	-D DEBUG_ESP_UPDATER
	-D DEBUG_ESP_OTA
	-D DEBUG_ESP_OOM
platform = espressif8266
framework = arduino
board = nodemcuv2
monitor_filters = esp8266_exception_decoder
board_build.f_cpu = 160000000L
monitor_speed = 115200
check_tool = clangtidy
check_flags = 
	clangtidy: --checks=-*,concurrency-*,misc-*,readability-*,portability-*,performance-*,modernize-*,google-*,clang-*,boost-*,bugprone-*,cert-*,abseil-*,hicpp-*,cppcoreguidelines-*,-google-runtime-references,-google-readability-todo,-cppcoreguidelines-macro-usage,-cppcoreguidelines-pro-type-reinterpret-cast,-hicpp-avoid-c-arrays,-modernize-avoid-c-arrays,-cppcoreguidelines-avoid-c-arrays,-google-readability-braces-around-statements,-hicpp-braces-around-statements,-readability-braces-around-statements,-misc-non-private-member-variables-in-classes,-clang-diagnostic-null-character,-hicpp-move-const-arg,-performance-move-const-arg,-cert-err58-cpp,-hicpp-no-array-decay,-cppcoreguidelines-pro-bounds-array-to-pointer-decay
lib_ldf_mode = deep
lib_deps = 
	bblanchon/ArduinoJson@^6.18.1
	https://github.com/internet-of-plants/dht
	https://github.com/internet-of-plants/dallas_temperature
	https://github.com/internet-of-plants/soil_resistivity
	https://github.com/internet-of-plants/factory_reset_button
	https://github.com/internet-of-plants/iop
platform_packages = 
	framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git#d5444c4aa38bff01269cfbd98a13a1454d0c62df

[env:posix]
platform = native
build_type = debug
lib_deps = 
	bblanchon/ArduinoJson@^6.18.1
	https://github.com/internet-of-plants/dht
	https://github.com/internet-of-plants/dallas_temperature
	https://github.com/internet-of-plants/soil_resistivity
	https://github.com/internet-of-plants/factory_reset_button
	https://github.com/internet-of-plants/iop
build_flags = 
	-std=c++17
	-Wconversion
	-Wall
	-Wextra
	-Wconversion
	-Wpedantic
	-pedantic-errors
	-fstack-protector
	-Wstack-protector
	
	-D IOP_POSIX

	-D IOP_LOG_LEVEL=iop::LogLevel::INFO
	-D IOP_USERNAME="admin"
	-D IOP_PASSWORD="admin"

test_build_project_src = yes

[env:esp32]
build_type = release
build_flags = 
	-std=gnu++17
	-O3
	-Wall
	
	-D ARDUINOJSON_ENABLE_ARDUINO_STRING=0
	-D ARDUINOJSON_ENABLE_ARDUINO_STREAM=0
	-D ARDUINOJSON_ENABLE_ARDUINO_PRINT=0
	-D ARDUINOJSON_ENABLE_PROGMEM=0
	
	-D IOP_ESP32
	
	-D IOP_SSL

	-D IOP_LOG_LEVEL=iop::LogLevel::INFO

build_unflags = 
	-std=gnu++11
lib_ldf_mode = deep
lib_deps = 
	bblanchon/ArduinoJson@^6.18.1
	https://github.com/internet-of-plants/dht
	https://github.com/internet-of-plants/dallas_temperature
	https://github.com/internet-of-plants/soil_resistivity
	https://github.com/internet-of-plants/factory_reset_button
	https://github.com/internet-of-plants/iop
platform = https://github.com/platformio/platform-espressif32.git#378419806ce465505a36437157d32c17144e45d2
framework = arduino
board = esp32dev
board_build.mcu = esp32
board_build.f_cpu = 240000000L
monitor_speed = 115200
extra_scripts = build/preBuildESP32.py
board_build.embed_files = x509_crt_bundle.bin
platform_packages = 
	toolchain-xtensa-esp32 @ 8.4.0+2021r1
	espressif/toolchain-riscv32-esp @ 8.4.0+2021r1
	framework-arduinoespressif32 @ https://github.com/internet-of-plants/arduino-esp32.git#release_2011
	platformio/tool-esptoolpy @ https://github.com/tasmota/esptool/releases/download/v3.2/esptool-v3.2.zip

[env:noop-desktop]
platform = native
build_type = debug
lib_deps = 
	bblanchon/ArduinoJson@^6.18.1
	https://github.com/internet-of-plants/dht
	https://github.com/internet-of-plants/dallas_temperature
	https://github.com/internet-of-plants/soil_resistivity
	https://github.com/internet-of-plants/factory_reset_button
	https://github.com/internet-of-plants/iop
build_flags = 
	-std=c++17
	
	-D IOP_NOOP
	
	-D IOP_SSL

	-D IOP_LOG_LEVEL=iop::LogLevel::INFO

[env:noop-esp8266]
build_type = release
build_flags = 
	-D ARDUINOJSON_ENABLE_ARDUINO_STRING=0
	-D ARDUINOJSON_ENABLE_ARDUINO_STREAM=0
	-D ARDUINOJSON_ENABLE_ARDUINO_PRINT=0
	-D ARDUINOJSON_ENABLE_PROGMEM=0
	
	-D IOP_NOOP
	
	-D IOP_SSL

	-D IOP_LOG_LEVEL=iop::LogLevel::INFO
platform = espressif8266
framework = arduino
board = nodemcuv2
monitor_filters = esp8266_exception_decoder
board_build.f_cpu = 160000000L
monitor_speed = 115200
lib_deps = 
	bblanchon/ArduinoJson@^6.18.1
	https://github.com/internet-of-plants/dht
	https://github.com/internet-of-plants/dallas_temperature
	https://github.com/internet-of-plants/soil_resistivity
	https://github.com/internet-of-plants/factory_reset_button
	https://github.com/internet-of-plants/iop
platform_packages = 
	framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git#d5444c4aa38bff01269cfbd98a13a1454d0c62df
